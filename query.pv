query u:Uname,a:Appid,aa:AAID,kid:KeyID; inj-event(RP_success_reg(u,a,aa,kid)) ==> (inj-event(Autr_verify_reg(u,a,aa,kid))==> inj-event(UA_init_reg(u,a))).
process
( (* many RPs ger registration requests *)
	(*choose the type you want to verify*)
let atype = autr_2b in
 let ltype = stepup in	(*let atype = autr_1b in 	*)
	(*let scene = software in *)
	
	new appid:Appid;
	new aaid:AAID;
	( (* many user register their accounts *)
		new wrapkey:key;
		new token:bitstring;
		new facetid:Facetid; 
		new callerid:Callerid; 
		new skAT:sskey; let pkAT = spk(skAT) in
		( (* a user register many times *)
			new https:channel; new CU:channel; new MC:channel; new AM:channel;
			new facetappid:Appid;
			new uname:Uname; new password:bitstring; new password2:bitstring;
			new fakefacetid:Facetid;
			new fakecallerid:Callerid;
			insert AppList(appid,facetid);			
			out(c,(uname,appid,facetid,callerid,aaid,pkAT));
			
			
out(c,wrapkey);
RegUC(c, MC, fakefacetid)|
RegUC(c, MC, fakefacetid)|
RegUA(https, c, uname,appid,password)|
RegUC(c, MC, fakefacetid)|
RegUA(https, c, uname,appid,password)|
RegASM(c, AM, token, fakecallerid, atype)|
RegUC(c, MC, fakefacetid)|
RegUA(https, c, uname,appid,password)|
RegASM(c, AM, token, fakecallerid, atype)|
RegUC(CU, c, facetid)|
RegUC(c, MC, fakefacetid)|
RegUA(https, c, uname,appid,password)|
RegASM(c, AM, token, fakecallerid, atype)|
RegUC(CU, c, facetid)|
RegAutr(c, aaid, skAT, wrapkey, atype)|
RegUC(c, MC, fakefacetid)|
RegUA(https, c, uname,appid,password)|
RegASM(c, AM, token, fakecallerid, atype)|
RegUC(CU, c, facetid)|
RegAutr(c, aaid, skAT, wrapkey, atype)|
RegASM(MC, c, token, callerid, atype)|
			
			
			(*out(c,skAT);*)
			(*out(c,token);*)
			(*out(c,wrapkey);*)
			
			(* malicious entities situations*)
			
			(*RegUC(c, MC, fakefacetid)|*)
			(*RegUA(https, c, uname,appid,password)|*)
			(*RegUC(CU, c, facetid)|*)
			(*RegASM(c, AM, token, fakecallerid, atype)|*)
			(*RegASM(MC, c, token, callerid, atype)|*)
			(*RegAutr(c, aaid, skAT, wrapkey, atype)|*)
		
			(* honest entities *)
			RegRP(https, uname, appid, password)|
			RegRP(c, uname, appid, password)|
			RegUA(https, CU,uname,appid, password)|
			(*RegUA(c,CU,uname,facetappid,password2)*)
			RegUC(CU, MC, facetid)|
			RegASM(MC, AM, token, callerid, atype)|
			RegAutr(AM, aaid, skAT, wrapkey, atype)
		)	
	)
)
