query seed:bitstring;attacker(gen_cntr(new cntr_basic,seed)).
query seed:bitstring;attacker(gen_skAU(new skAU_basic,seed))==> event(malicious_US_to_RP()) || event(malicious_UC_to_ASM()) || event(malicious_RP_to_UA()).
let system(appid:Appid,aaid:AAID,skAT:sskey,uname:Uname,password:bitstring,facetid:Facetid,callerid:Callerid,personaid:PersonaID,token:bitstring,wrapkey:key)=
(
	new SR:channel; new https:channel; new CU:channel; new MC:channel; new AM:channel;
	let pkAT = spk(skAT) in
    new skAUbasic:sskey; new cntrbasic:CNTR; new kidbasic:KeyID;
	new fakefacetid:Facetid; new fakecallerid:Callerid; new fakepersonaid:PersonaID;
	(* the attacker has access to following fields *)
	out(c,(uname,appid,facetid,callerid,fakefacetid,personaid,fakepersonaid,aaid,pkAT));
	insert AppList(appid,facetid);
	(event leak_token();out(c,token))|
	(event leak_kw(); out(c,wrapkey))|
	(event leak_skat(); out(c,skAT))|
	(event malicious_US_to_RP();!RegRP_2r_seta(c, https, uname, password))|
	(event malicious_RP_to_US();!RegUS_2r_seta(c, appid))|
	(event malicious_RP_to_UA(); RegUA_2r_seta(c,CU,uname,password))|
	(event malicious_UA_to_RP(); !RegRP_2r_seta(SR, c, uname, password))|
	(event malicious_UA_to_UC();!RegUC_2r_seta(c, MC, fakefacetid))|
	(event malicious_UC_to_UA();RegUA_2r_seta(https, c, uname,password))|
	(event malicious_UC_to_ASM();!RegASM_2r_seta(c, AM, token, fakecallerid, fakepersonaid))|
	(event malicious_ASM_to_UC();!RegUC_2r_seta(CU, c, facetid))|
	(event malicious_ASM_to_Autr();!RegAutr_2r_seta(c, aaid, skAT, wrapkey,skAU_basic,cntr_basic,kid_basic))|
	(event malicious_Autr_to_ASM();!RegASM_2r_seta(MC, c, token, callerid, personaid))|
	RegUS_2r_seta(SR, appid)|
	RegRP_2r_seta(SR, https, uname, password)|
	RegUA_2r_seta(https, CU,uname, password)|
	RegUC_2r_seta(CU, MC, facetid)|
	RegASM_2r_seta(MC, AM, token, callerid, personaid)|
	RegAutr_2r_seta(AM, aaid, skAT, wrapkey,skAU_basic,cntr_basic,kid_basic)
).
process
( 
	new appid:Appid; new aaid:AAID; new facetid:Facetid;  new callerid:Callerid;  new personaid:PersonaID; new skAT:sskey;  new wrapkey:key; new token:bitstring;
	new uname:Uname; new password:bitstring;
	(* User 1 registers in RP 1 *)
	system(appid,aaid,skAT,uname,password,facetid,callerid,personaid,token,wrapkey)
)
