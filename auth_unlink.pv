let system(appid:Appid,aaid:AAID,skAU:sskey,keyid:KeyID,wrapkey:key,token:bitstring,uname:Uname,facetid:Facetid,callerid:Callerid,personaid:PersonaID,cntr:CNTR) =
(
	let pkAU = spk(skAU) in 
	let ak = To_12b_token(appid,token,callerid,personaid) in
	let kh = senc((skAU,ak,uname,keyid),wrapkey) in
	let kid = keyid in
	(*insert ASMDB(appid,kid,kh); insert AutrDB(appid,kid,kh);*)
	out(c,(uname,appid,facetid,aaid,callerid,personaid,pkAU)); (* public info *)
	( 
	new SR:channel; new https:channel; new CU:channel; new MC:channel; new AM:channel;
	new fakecallerid:Callerid; new fakefacetid:Facetid; new fakepersonaid:PersonaID;
	new tr:Tr;

	(event malicious_UA_to_RP(); AuthRP_1b_login_seta(SR,c))|

	AuthUS_1b_login_seta(SR, uname, appid, aaid,kid,pkAU,cntr,tr)|
	AuthRP_1b_login_seta(SR, https)|
	AuthUA_1b_login_seta(https, CU,uname)|
	AuthUC_1b_login_seta(CU, MC, facetid)|
	AuthASM_1b_login_seta(MC,AM,token,callerid,callerid,personaid,appid,kid,kh)|
	AuthAutr_1b_login_seta(AM,aaid,wrapkey,cntr,tr,appid,kh)
	)
).
process
(
	new appid:Appid; new aaid:AAID; new skAU:sskey;  new keyid:KeyID; new wrapkey:key;new token:bitstring; new uname:Uname; new cntr:CNTR;
	let facetid = find_facetid(appid) in
	new callerid:Callerid;
	new personaid:PersonaID;
	new appid2:Appid; new skAU2:sskey; new wrapkey2:key; new token2:bitstring; new uname2:Uname; new cntr2:CNTR; new keyid2:KeyID;
	let facetid2 = find_facetid(appid2) in
	(* User 1 authenticates in RP 1 *)
	!system(appid,aaid,skAU,keyid,wrapkey,token,uname,facetid,callerid,personaid,cntr)|
	!system(appid2,aaid,skAU2,keyid2,choice[wrapkey,wrapkey2],choice[token,token2],uname2,facetid2,callerid,personaid,cntr2)
)
